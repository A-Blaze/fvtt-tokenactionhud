name: Create Release Archive
on:
  push:
    branches:
      - feature/test_workflows
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Write Module Version
      uses: deef0000dragon1/json-edit-action/@v1
      env:
        KEY: version
        VALUE: ${{ steps.get_version.outputs.VERSION }}
        FILE: module.json
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        filename: 'release_${{ steps.get_version.outputs.VERSION }}.zip'
        exclusions: '*.git* .editorconfig foundry.js'
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release_${{ steps.get_version.outputs.VERSION }}.zip
        asset_name: release_${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip